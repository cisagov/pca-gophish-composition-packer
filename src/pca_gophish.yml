---
- hosts: all
  name: Install and configure PCA Gophish Docker composition
  become: yes
  become_method: sudo
  roles:
    - pca_gophish_composition
  tasks:
    - name: Install python3-boto3, used by cloud-init scripts
      ansible.builtin.package:
        name:
          - python3-boto3
    # We use cloud-init scripts in cisagov/cool-assessment-terraform to
    # set Docker's backing file system to a persistent volume.  It would
    # cause problems if the Docker service were to start before cloud-init
    # finished, so we modify the Docker unit file to wait until cloud-final
    # has completed.  We include multi-user.service in here also to avoid
    # a systemd dependency cycle.
    - name: Ensure Docker starts after multi-user and cloud-final complete
      ansible.builtin.lineinfile:
        path: /lib/systemd/system/docker.service
        backrefs: yes
        # The exclamation mark forces us to quote the string because
        # it is a special character in YAML.
        #
        # The (?!...) jazz is a negative look-ahead assertion.  See
        # here, for example:
        # https://docs.python.org/3/library/re.html
        regexp: '^After=(.*)(?! multi\-user\.target cloud\-final\.service)$'
        line: After=\1 multi-user.target cloud-final.service
    # Since we are using postfix (inside Docker), we first remove the
    # exim4 mail transfer agent (MTA) to avoid any conflicts with
    # SMTP ports 25 and 587.
    - name: Stop and disable exim4 service
      ansible.builtin.service:
        enabled: false
        name: exim4.service
        state: stopped
    - name: Uninstall exim4 packages
      ansible.builtin.apt:
        # Use "autoremove" to get rid of any exim4 dependencies
        # that are no longer needed
        autoremove: yes
        name: exim4*
        state: absent
    - name: Configure PCA Gophish Docker composition
      block:
        - name: >
            Create a gophish group with the same GID as inside
            gophish-docker
          ansible.builtin.group:
            name: "{{ gophish_group }}"
            gid: 421
            system: yes
        - name: Change Gophish published port from 3380 to 443
          ansible.builtin.lineinfile:
            path: "{{ pca_gophish_composition_path }}/docker-compose.yml"
            regexp: "published: 3380$"
            line: "        published: 443"
            state: present
        - name: Configure Gophish to use TLS
          ansible.builtin.replace:
            path: >-
              {{ pca_gophish_composition_path }}/secrets/gophish/config.json
            regexp: '^(\s*"use_tls":\s*)false\s*$'
            replace: '\1true'
        # I was hoping to override the default published postfix ports for
        # target (internal container) ports 25 and 587 by including our
        # preferred published ports in docker-compose.production.yml.
        # However, when Docker Compose merges the contents of the default
        # docker-compose.yml with the contents of
        # docker-compose.production.yml, it does not intelligently overwrite
        # the published ports.  For example, instead of having target
        # port 25 published to only host port 25 (as specified in
        # docker-compose.production.yml), we end up with target port 25
        # published to BOTH host port 25 (from docker-compose.production.yml)
        # and host port 1025 (from docker-compose.yml).
        # That is why the next step removes the default published ports from
        # docker-compose.yml so that only the ports specified in
        # docker-compose.production.yml will be published.
        #
        # TODO: Due to the extreme ugliness of the following regex,
        # https://github.com/cisagov/pca-gophish-composition-packer/issues/42
        # was created to find a cleaner solution to this problem.
        - name: Remove default postfix published ports
          ansible.builtin.replace:
            path: "{{ pca_gophish_composition_path }}/docker-compose.yml"
            regexp: "^\\s*ports:\\s*$\n\
            ^\\s*-\\s*target:\\s*25\\s*$\n\
            ^\\s*published:\\s*1025\\s*$\n\
            ^\\s*protocol:\\s*tcp\\s*$\n\
            ^\\s*mode:\\s*host\\s*$\n\
            ^\\s*-\\s* target:\\s*587\\s*$\n\
            ^\\s*published:\\s*1587\\s*$\n\
            ^\\s*protocol:\\s*tcp\\s*$\n\
            ^\\s*mode:\\s*host\\s*$\n"
        - name: >
            Copy docker-compose.production.yml to pca-gophish-composition
            dir
          ansible.builtin.copy:
            mode: 0644
            src: docker-compose.production.yml
            dest: >-
              {{ pca_gophish_composition_path }}/docker-compose.production.yml
        - name: Copy postfix users file to composition secrets directory
          ansible.builtin.copy:
            mode: 0644
            src: postfix-users.txt
            dest: >-
              {{ pca_gophish_composition_path }}/secrets/postfix/users.txt
        - name: Set up pca-gophish-composition systemd service
          block:
            - name: Install systemd service file for pca-gophish-composition
              ansible.builtin.copy:
                mode: 0644
                src: pca-gophish-composition.service
                dest: /etc/systemd/system/pca-gophish-composition.service
            - name: Reload systemd daemon
              ansible.builtin.systemd:
                daemon_reload: true
            - name: >
                Enable pca-gophish-composition systemd service to start
                on boot
              ansible.builtin.systemd:
                name: pca-gophish-composition.service
                enabled: true
          when:
            - ansible_service_mgr == "systemd"
    - name: Create standard directories used by PCA operators
      block:
        - name: Create data directories
          ansible.builtin.file:
            group: "{{ vnc_username }}"
            mode: 0755
            owner: "{{ vnc_username }}"
            path: /home/{{ vnc_username }}/PCA/Level-{{ item }}/Data
            state: directory
            # range is exclusive of end point
          loop: "{{ range(1, pca_num_levels + 1)|list }}"
          vars:
            # The standard number of phishing campaign levels in a PCA
            pca_num_levels: 6
        - name: Create Gophish-writable directories
          # Give full permissions to the gophish group and set the group
          # sticky bit so that future content in the directory will also be
          # owned by the gophish group
          ansible.builtin.file:
            group: "{{ gophish_group }}"
            mode: 02775
            owner: "{{ vnc_username }}"
            path: /home/{{ vnc_username }}/PCA/{{ item }}
            state: directory
          loop:
            - Email_Targets
            - Email_Templates
    - name: Create Gophish desktop shortcut for VNC user
      block:
        - name: Create VNC user Desktop directory
          ansible.builtin.file:
            path: /home/{{ vnc_username }}/Desktop
            state: directory
            mode: 0755
            owner: "{{ vnc_username }}"
            group: "{{ vnc_username }}"
        - name: Create Gophish desktop shortcut for VNC user
          ansible.builtin.copy:
            src: gophish-shortcut.desktop
            dest: /home/{{ vnc_username }}/Desktop/gophish-shortcut.desktop
            mode: 0755
            owner: "{{ vnc_username }}"
            group: "{{ vnc_username }}"
    # Add VNC user to docker group so that operators can successfully
    # execute docker compose commands.
    - name: Add VNC user to docker group
      ansible.builtin.user:
        append: yes
        groups:
          - docker
        name: "{{ vnc_username }}"
  vars:
    gophish_group: gophish
    pca_gophish_composition_path: /var/pca/pca-gophish-composition
    vnc_username: "{{ lookup('aws_ssm', '/vnc/username') }}"
