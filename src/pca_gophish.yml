---
- hosts: all
  name: Install and configure PCA GoPhish Docker composition
  become: yes
  become_method: sudo
  roles:
    - pca_gophish_composition
  tasks:
    # Since we are using postfix (inside Docker), we first remove the
    # exim4 mail transfer agent (MTA) to avoid any conflicts with
    # SMTP ports 25 and 587.
    - name: Stop and disable exim4 service
      ansible.builtin.service:
        enabled: false
        name: exim4.service
        state: stopped
    - name: Uninstall exim4 packages
      ansible.builtin.apt:
        # Use "autoremove" to get rid of any exim4 dependencies
        # that are no longer needed
        autoremove: yes
        name: exim4*
        state: absent
    # Currently, the latest available version of docker-compose on Debian
    # Buster is 1.21.0 (see
    # https://packages.debian.org/source/buster/docker-compose).
    # Unfortunately, the pca-gophish Docker composition requires version 3.7
    # of the docker-compose file format, which is supported by docker-compose
    # 1.22.0 and later.  To work around that, we create a virtualenv and
    # install docker-compose via pip, which gives us a newer version that
    # supports file format 3.7.
    # TODO Remove virtualenv steps below when docker-compose >= 1.22.0
    # becomes available for this image via the package manager.
    # TODO Update all of the docker-compose paths in
    # "pca-gophish-composition.service" once the virtualenv has been removed.
    - name: Install virtualenv
      ansible.builtin.package:
        name:
          - virtualenv
    - name: Create virtualenv and install docker-compose
      ansible.builtin.pip:
        chdir: "{{ pca_gophish_composition_path }}"
        name: docker-compose
        virtualenv: "{{ pca_gophish_composition_path }}/venv"
        virtualenv_python: python3
    - name: Configure PCA GoPhish Docker composition
      block:
        - name: >
            Create a gophish group with the same GID as inside
            gophish-docker
          ansible.builtin.group:
            name: gophish
            gid: 421
            system: yes
        - name: Create mount point for GoPhish persistent data volume
          ansible.builtin.file:
            mode: 0755
            path: "{{ pca_gophish_composition_path }}/data"
            state: directory
        - name: Change GoPhish published port from 3380 to 80
          ansible.builtin.lineinfile:
            path: "{{ pca_gophish_composition_path }}/docker-compose.yml"
            regexp: "published: 3380$"
            line: "        published: 80"
            state: present
        # I was hoping to override the default published postfix ports for
        # target (internal container) ports 25 and 587 by including our
        # preferred published ports in docker-compose.production.yml.
        # However, when Docker Compose merges the contents of the default
        # docker-compose.yml with the contents of
        # docker-compose.production.yml, it does not intelligently overwrite
        # the published ports.  For example, instead of having target
        # port 25 published to only host port 25 (as specified in
        # docker-compose.production.yml), we end up with target port 25
        # published to BOTH host port 25 (from docker-compose.production.yml)
        # and host port 1025 (from docker-compose.yml).
        # That is why the next step removes the default published ports from
        # docker-compose.yml so that only the ports specified in
        # docker-compose.production.yml will be published.
        #
        # TODO: Due to the extreme ugliness of the following regex,
        # https://github.com/cisagov/pca-gophish-composition-packer/issues/42
        # was created to find a cleaner solution to this problem.
        - name: Remove default postfix published ports
          ansible.builtin.replace:
            path: "{{ pca_gophish_composition_path }}/docker-compose.yml"
            regexp: "^\\s*ports:\\s*$\n\
            ^\\s*-\\s*target:\\s*['\"]25['\"]\\s*$\n\
            ^\\s*published:\\s*['\"]1025['\"]\\s*$\n\
            ^\\s*protocol:\\s*tcp\\s*$\n\
            ^\\s*mode:\\s*host\\s*$\n\
            ^\\s*-\\s* target:\\s*['\"]587['\"]\\s*$\n\
            ^\\s*published:\\s*['\"]1587['\"]\\s*$\n\
            ^\\s*protocol:\\s*tcp\\s*$\n\
            ^\\s*mode:\\s*host\\s*$\n"
        - name: >
            Copy docker-compose.production.yml to pca-gophish-composition
            dir
          ansible.builtin.copy:
            mode: 0644
            src: docker-compose.production.yml
            dest: >-
              {{ pca_gophish_composition_path }}/docker-compose.production.yml
        - name: Copy postfix users file to composition secrets directory
          ansible.builtin.copy:
            mode: 0644
            src: postfix-users.txt
            dest: >-
              {{ pca_gophish_composition_path }}/secrets/postfix/users.txt
        - name: Set up pca-gophish-composition systemd service
          block:
            - name: Install systemd service file for pca-gophish-composition
              ansible.builtin.copy:
                mode: 0644
                src: pca-gophish-composition.service
                dest: /etc/systemd/system/pca-gophish-composition.service
            - name: Reload systemd daemon
              ansible.builtin.systemd:
                daemon_reload: true
            - name: >
                Enable pca-gophish-composition systemd service to start
                on boot
              ansible.builtin.systemd:
                name: pca-gophish-composition.service
                enabled: true
          when:
            - ansible_service_mgr == "systemd"
    - name: Create GoPhish desktop shortcut for VNC user
      block:
        - name: Create VNC user Desktop directory
          ansible.builtin.file:
            path: /home/{{ vnc_username }}/Desktop
            state: directory
            mode: 0755
            owner: "{{ vnc_username }}"
            group: "{{ vnc_username }}"
        - name: Create GoPhish desktop shortcut for VNC user
          ansible.builtin.copy:
            src: gophish-shortcut.desktop
            dest: /home/{{ vnc_username }}/Desktop/gophish-shortcut.desktop
            mode: 0755
            owner: "{{ vnc_username }}"
            group: "{{ vnc_username }}"
  vars:
    pca_gophish_composition_path: /var/pca/pca-gophish-composition
    vnc_username: "{{ lookup('aws_ssm', '/vnc/username') }}"
