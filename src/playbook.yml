---
- hosts: all
  name: Setup base image
  become: yes
  become_method: sudo
  roles:
    - upgrade
    - python
    - banner
    - dev_ssh_access
    - persist_journald
    - htop

# AWS instance types expose EBS volumes as NVMe block devices, so install nvme
- hosts: aws
  name: Install nvme
  become: yes
  become_method: sudo
  roles:
    - nvme

- hosts: all
  name: Install VNC server
  become: yes
  become_method: sudo
  roles:
    - vnc_server

# Guacamole prefers to connect to the VNC server with TLSVnc security,
# however that resulted in frequent disconnections of the VNC session with
# errors like the following (from /home/vnc/.vnc/ip-*:1.log):
#    Connections: closed: 10.10.50.20::53496
#                 (readTLS: (unknown error code) (384))
#     TLS:         TLS session wasn't terminated gracefully
# The root cause may be: https://issues.apache.org/jira/browse/GUACAMOLE-414
# However, the fix for that issue has not yet made it's way to the official
# Guacamole docker image, which is what we use.
# Until that happens, our workaround is to force the VNC server to not accept
# authentication via TLS ("TLSVnc"), and only accept "VncAuth".  This is
# accomplished by adding "-SecurityType VncAuth" as a startup parameter to
# vncserver in the systemd service file.
- hosts: all
  name: Configure VNC service
  vars:
    vnc_username: "{{ lookup('aws_ssm', '/vnc/username') }}"
  become: yes
  become_method: sudo
  tasks:
    - name: Set up VNC systemd service
      block:
        - name: Install VNC systemd service file with SecurityType VncAuth
          template:
            src: vncserver@.service
            dest: /lib/systemd/system/
            mode: 0644

        - name: Systemd daemon-reload
          systemd:
            daemon_reload: true

        - name: Restart VNC systemd service
          systemd:
            name: "vncserver@1.service"
            state: restarted
      when:
        - ansible_service_mgr == "systemd"

- hosts: all
  name: Install Chromium web browser
  become: yes
  become_method: sudo
  tasks:
    - name: Install Chromium web browser
      package:
        name: chromium

- hosts: all
  name: Install PCA GoPhish Docker composition
  become: yes
  become_method: sudo
  roles:
    - pca_gophish_composition

- hosts: all
  vars:
    pca_gophish_composition_path: "/var/pca/pca-gophish-composition"
  name: Configure GoPhish Docker composition
  become: yes
  become_method: sudo
  tasks:
    - name: Create a gophish group with the same GID as inside gophish-docker
      group:
        name: gophish
        gid: 421
        system: yes

    - name: Create mount point for GoPhish persistent data volume
      file:
        path: "{{ pca_gophish_composition_path }}/data"
        state: directory

    - name: Change GoPhish published port from 3380 to 80
      lineinfile:
        path: "{{ pca_gophish_composition_path }}/docker-compose.yml"
        regexp: "published: 3380$"
        line: "        published: 80"
        state: present

    - name: Copy docker-compose.production.yml to pca-gophish-composition dir
      copy:
        src: docker-compose.production.yml
        dest: "{{ pca_gophish_composition_path }}/docker-compose.production.yml"

    - name: Set up pca-gophish-composition systemd service
      block:
        - name: Install systemd service file for pca-gophish-composition
          copy:
            src: pca-gophish-composition.service
            dest: /etc/systemd/system/pca-gophish-composition.service

        - name: Reload systemd daemon
          systemd:
            daemon_reload: true

        - name: Enable pca-gophish-composition systemd service to start on boot
          systemd:
            name: pca-gophish-composition.service
            enabled: true
      when:
        - ansible_service_mgr == "systemd"

- hosts: all
  name: Configure VNC user
  vars:
    vnc_username: "{{ lookup('aws_ssm', '/vnc/username') }}"
    vnc_ssh_public_key: "{{ lookup('aws_ssm', '/vnc/ssh/rsa_public_key') }}"
    vnc_ssh_private_key: "{{ lookup('aws_ssm', '/vnc/ssh/rsa_private_key') }}"
  become: yes
  become_method: sudo
  tasks:
    - name: Add VNC user to docker group
      user:
        name: "{{ vnc_username }}"
        groups: docker
        append: yes

    - name: Create .ssh directory for VNC user
      file:
        path: "/home/{{ vnc_username }}/.ssh"
        state: directory
        owner: "{{ vnc_username }}"
        group: "{{ vnc_username }}"
        mode: 0755

    # Install SSH keypair for VNC user; this will enable Guacamole to perform
    # file transfers to/from this instance
    # NOTE: Guacamole (v.1.0.0) currently only supports RSA keys
    - name: Install SSH public key for VNC user
      copy:
        content: "{{ vnc_ssh_public_key }}"
        dest: "/home/{{ vnc_username }}/.ssh/id_rsa.pub"
        mode: 0644
        owner: "{{ vnc_username }}"
        group: "{{ vnc_username }}"

    - name: Install SSH private key for VNC user
      copy:
        content: "{{ vnc_ssh_private_key }}"
        dest: "/home/{{ vnc_username }}/.ssh/id_rsa"
        mode: 0600
        owner: "{{ vnc_username }}"
        group: "{{ vnc_username }}"
      no_log: true

    - name: Add VNC SSH public key as authorized key
      authorized_key:
        user: "{{ vnc_username }}"
        key: "{{ vnc_ssh_public_key }}"
